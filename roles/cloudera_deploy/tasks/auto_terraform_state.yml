---

# Copyright 2021 Cloudera, Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Resources for remote_s3 state storage
  when:
    - globals.terraform.state_storage == 'remote_s3'
  block:
    
    # Create or Teardown the resources
    - name: AWS Bucket for Remote State Storage
      amazon.aws.aws_s3:
        region: "{{ globals.region }}"
        bucket: "{{ globals.terraform.remote_state_bucket}}"
        mode: "{{ ('teardown' not in ansible_run_tags)  | ternary('create', 'delete') }}" # Check ansible tag to determine action
        permission: private
      register: __infra_aws_storage_locations_info

    - name: AWS DynamoDB for Remote State Locking
      community.aws.dynamodb_table:
        region: "{{ globals.region }}"
        name: "{{ globals.terraform.remote_state_lock_table }}"
        read_capacity: 1
        write_capacity: 1
        hash_key_name: LockID
        hash_key_type: STRING
        state: "{{ ('teardown' not in ansible_run_tags) | ternary('present', 'absent') }}" # Check ansible tag to determine action

    - name: Print remote state configuration
      when: "'teardown' not in ansible_run_tags"
      ansible.builtin.debug:
        msg:
          - "Resources for remote_s3 Terraform State created."
          - "S3 Bucket Name: {{ globals.terraform.remote_state_bucket}}"
          - "DynamoDB Locking Table: {{ globals.terraform.remote_state_lock_table}}"
        verbosity: 3